//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vibrant.InfluxDB.Client.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Vibrant.InfluxDB.Client.Resources.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse an incoming value to an enum for the property {0} on the type {1}. The value was {2}..
        /// </summary>
        internal static string CouldNotParseEnum {
            get {
                return ResourceManager.GetString("CouldNotParseEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not convert the incominng value {0} to the enum on the property {1} on the type {2}..
        /// </summary>
        internal static string CountNotConvertEnumToString {
            get {
                return ResourceManager.GetString("CountNotConvertEnumToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine which columns in the returned data are tags and which are fields..
        /// </summary>
        internal static string IndeterminateColumns {
            get {
                return ResourceManager.GetString("IndeterminateColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} on the type {1} which is used as an InfluxField must be one of the following types: string, double, long, bool, DateTime, Nullable&lt;double&gt;, Nullable&lt;long&gt;, Nullable&lt;bool&gt;, Nullable&lt;DateTime&gt; or a user-defined enum..
        /// </summary>
        internal static string InvalidFieldType {
            get {
                return ResourceManager.GetString("InvalidFieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} on the type {1} must specify a non-empty name for either an InfluxField or InfluxTag..
        /// </summary>
        internal static string InvalidNameProperty {
            get {
                return ResourceManager.GetString("InvalidNameProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} on the type {1} which is used as an InfluxTag must be either a string or a user-defined enum..
        /// </summary>
        internal static string InvalidTagType {
            get {
                return ResourceManager.GetString("InvalidTagType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} on the type {1} which is used as the InfluxTimestamp must be either a DateTime or a Nullable&lt;DateTime&gt;..
        /// </summary>
        internal static string InvalidTimestampType {
            get {
                return ResourceManager.GetString("InvalidTimestampType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} on the type {1} has multiple InfluxAttributes. This is not allowed. Please specify only InfluxTimestamp, InfluxTag or InfluxField..
        /// </summary>
        internal static string MultipleAttributesOnSingleProperty {
            get {
                return ResourceManager.GetString("MultipleAttributesOnSingleProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while parsing the error response after an unsuccessful request..
        /// </summary>
        internal static string ParsingError {
            get {
                return ResourceManager.GetString("ParsingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No measurements were returned in the query. Likely because the measurement does not exist, no data exists for the queried period or because there was an error in the identifiers used in the query..
        /// </summary>
        internal static string UnexpectedQueryResult {
            get {
                return ResourceManager.GetString("UnexpectedQueryResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error occurred. Please inspect the inner exception..
        /// </summary>
        internal static string UnknownError {
            get {
                return ResourceManager.GetString("UnknownError", resourceCulture);
            }
        }
    }
}
